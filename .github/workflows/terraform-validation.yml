name: Terraform Validation and Release

on:
  push:
    branches:
      - main

jobs:
  validate:
    name: Terraform Validation
    runs-on: ubuntu-latest

    steps:
      - name: Print OS and Architecture
        run: |
          echo "OS: $(uname -s)"
          echo "Architecture: $(uname -m)"

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Validate Terraform
        run: terraform validate

      # Recommendation step for validation
      - name: Recommendation for Validation
        run: |
          echo "Recommendation: Please review the output of Terraform validation."

  static-code-analysis:
    name: Terraform Static Code Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Print OS and Architecture
        run: |
          echo "OS: $(uname -s)"
          echo "Architecture: $(uname -m)"

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Install Terraform TFLint
        run: |
          curl -L "$(curl -Ls https://api.github.com/repos/terraform-linters/tflint/releases/latest | jq -r '.assets[].browser_download_url | select(contains("linux_amd64"))')" > tflint.zip
          unzip tflint.zip
          chmod +x tflint
          sudo mv tflint /usr/local/bin/

      - name: Run Terraform TFLint
        run: tflint

      # Recommendation step for static code analysis
      - name: Recommendation for Static Code Analysis
        run: |
          echo "Recommendation: Please review the Terraform TFLint results for potential issues."

  security-scanning:
    name: Terraform Security Scanning
    runs-on: ubuntu-latest

    steps:
      - name: Print OS and Architecture
        run: |
          echo "OS: $(uname -s)"
          echo "Architecture: $(uname -m)"

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Install TFSec
        run: |
          OS=$(uname -s)
          ARCH=$(uname -m)
          if [ "$OS" = "Linux" ] && [ "$ARCH" = "x86_64" ]; then
            curl -L -o tfsec https://github.com/tfsec/tfsec/releases/latest/download/tfsec-linux-amd64
          else
            echo "Unsupported OS or Architecture for tfsec."
            exit 1
          fi
          chmod +x tfsec
          sudo mv tfsec /usr/local/bin/

      - name: Run Terraform TFSec
        run: tfsec . || true

      # Recommendation step for security scanning
      - name: Recommendation for Security Scanning
        run: |
          echo "Recommendation: Please review the Terraform TFSec results for potential issues."
    
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan
